library(tidyverse)
library(ggplot2)
# Load libraries and raw data
library(tidyverse)
library(readr)
raw <- read_csv("All_channels.csv")
processed <- raw %>%
mutate(
channel = fct_reorder(channel, key_events, .desc = TRUE)
) %>%
group_by(channel) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc      = mean(ads_cpc, na.rm = TRUE),
avg_roas     = mean(roas, na.rm = TRUE)
) %>%
ungroup()
# Load libraries and raw data
library(tidyverse)
library(readr)
raw <- read_csv("All_channels.csv")
processed <- raw %>%
mutate(
channel = fct_reorder(channel, key_events, .desc = TRUE)
) %>%
group_by(channel) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc      = mean(ads_cpc, na.rm = TRUE),
avg_roas     = mean(roas, na.rm = TRUE)
) %>%
ungroup()
library(tidyverse)
library(readr)
# Load and tidy data
raw <- read_csv("All_channels.csv")
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
source_medium = `Source / medium`,
key_events = `Key events`,
ads_cost = `Ads cost`,
cost_per_event = `Cost per key event`,
ads_impressions = `Ads impressions`,
ads_clicks = `Ads clicks`,
ads_cpc = `Ads cost per click`,
total_revenue = `Total revenue`,
roas = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(ads_cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
head(processed)
library(kableExtra)
processed %>%
arrange(desc(total_events)) %>%
kbl(caption = "Channel Performance Summary") %>%
kable_styling(full_width = TRUE, bootstrap_options = c("striped", "hover"))
ggplot(processed, aes(x = total_events, y = avg_roas, label = channel_group)) +
geom_point(color = "#2c7bb6", size = 4) +
geom_text(nudge_y = 0.05) +
theme_minimal() +
labs(
title = "Total Key Events vs. Average ROAS",
x = "Total Key Events",
y = "Average ROAS"
)
ggplot(processed, aes(x = reorder(channel_group, avg_cpc), y = avg_cpc, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
theme_classic() +
labs(
title = "Average CPC by Channel",
x = "Channel Group",
y = "Average Cost per Click (CPC)"
)
top_events <- processed %>% slice_max(total_events, n = 5)
ggplot(top_events, aes(x = reorder(channel_group, total_events), y = total_events, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
theme_minimal() +
labs(
title = "Top 5 Channels by Total Events",
x = "Channel Group",
y = "Total Events"
)
top_roas <- processed %>% slice_max(avg_roas, n = 5)
ggplot(top_roas, aes(x = reorder(channel_group, avg_roas), y = avg_roas, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
theme_minimal() +
labs(
title = "Top 5 Channels by Average ROAS",
x = "Channel Group",
y = "Average ROAS"
)
head(raw)
# Load libraries and raw data
library(tidyverse)
library(readr)
raw <- read_csv("All_channels.csv") %>%
rename(
channel = `Primary channel group (Default Channel Group)`,
source_medium = `Source / medium`,
key_events = `Key events`,
ads_cost = `Ads cost`,
cost_per_event = `Cost per key event`,
ads_impressions = `Ads impressions`,
ads_clicks = `Ads clicks`,
cpc = `Ads cost per click`,
total_revenue = `Total revenue`,
roas = `Return on ad spend`
)
processed <- raw %>%
group_by(channel) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
# Display summary table for all channels
library(kableExtra)
processed %>%
arrange(desc(total_events)) %>%
kbl(caption = "Channel Performance Summary") %>%
kable_styling(full_width = TRUE, bootstrap_options = c("striped", "hover"))
library(ggplot2)
ggplot(processed, aes(x = total_events, y = avg_roas)) +
geom_point(aes(color = channel_group), size = 4) +
geom_smooth(method = "lm", se = FALSE, color = "#333333") +
theme_minimal() +
scale_color_brewer(palette = "Dark2") +
labs(x = "Total Key Events", y = "Average ROAS")
# Load libraries and data
library(tidyverse)
library(readr)
library(kableExtra)
raw <- read_csv("All_channels.csv")
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
key_events = `Key events`,
ads_cpc = `Ads cost per click`,
roas = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarize(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(ads_cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
# Load libraries and data
library(tidyverse)
library(readr)
library(kableExtra)
raw <- read_csv("All_channels.csv")
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
key_events = `Key events`,
ads_cpc = `Ads cost per click`,
roas = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarize(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(ads_cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
# Top 5 channels by ROAS
processed %>%
slice_max(avg_roas, n = 5) %>%
ggplot(aes(x = reorder(channel_group, avg_roas), y = avg_roas, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
theme_minimal() +
labs(x = "Channel Group", y = "Average ROAS")
# Histogram for ROAS distribution
ggplot(processed, aes(x = avg_roas)) +
geom_histogram(binwidth = 0.1, fill = "#007bff", color = "white") +
theme_minimal() +
labs(x = "Average ROAS", y = "Channel Count")
# Histogram for ROAS distribution
ggplot(processed, aes(x = avg_roas)) +
geom_histogram(binwidth = 0.1, fill = "#007bff", color = "white") +
theme_minimal() +
labs(x = "Average ROAS", y = "Channel Count")
# Bar chart for average CPC
ggplot(processed, aes(x = reorder(channel_group, avg_cpc), y = avg_cpc, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
theme_classic() +
scale_fill_brewer(palette = "Paired") +
labs(x = "Channel Group", y = "Avg CPC")
library(tidyverse)
library(readr)
library(kableExtra)
# Load data
raw <- read_csv("All_channels.csv")
# Process data
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
key_events = `Key events`,
ads_cpc = `Ads cost per click`,
roas = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(ads_cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
ggplot(processed, aes(x = total_events, y = avg_roas, color = channel_group)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, color = "#333333") +
theme_minimal() +
scale_color_brewer(palette = "Dark2") +
labs(
x = "Total Key Events",
y = "Average ROAS",
color = "Channel Group"
)
library(tidyverse)
library(readr)
library(kableExtra)
library(ggplot2)
# Load data
raw <- read_csv("All_channels.csv")
# Process data
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
key_events = `Key events`,
ads_cpc = `Ads cost per click`,
roas = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(ads_cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
# â”€â”€â”€ Marketing Channel Performance Script â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 1) Install & load packages (run once)
if (!requireNamespace("tidyverse",   quietly=TRUE)) install.packages("tidyverse")
if (!requireNamespace("readr",       quietly=TRUE)) install.packages("readr")
if (!requireNamespace("kableExtra",  quietly=TRUE)) install.packages("kableExtra")
library(tidyverse)
library(readr)
library(kableExtra)
# 2) Load & process data
raw <- read_csv("All_channels.csv")
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
key_events    = `Key events`,
ads_cpc       = `Ads cost per click`,
roas          = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc      = mean(ads_cpc, na.rm = TRUE),
avg_roas     = mean(roas,   na.rm = TRUE)
) %>%
ungroup()
# 3) Print Overview numbers
cat("\nðŸ“Š Overview Metrics\n")
cat("  â€¢ Total Events:", sum(processed$total_events), "\n")
cat("  â€¢ Avg. CPC:     ", round(mean(processed$avg_cpc), 2), "\n")
cat("  â€¢ Avg. ROAS:   ", round(mean(processed$avg_roas), 2), "\n\n")
# 4) Scatter: Events vs. ROAS
library(ggplot2)
p1 <- ggplot(processed, aes(total_events, avg_roas, color = channel_group)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, color = "#333333") +
scale_color_brewer(palette = "Dark2") +
theme_minimal() +
labs(
title = "Total Key Events vs. Average ROAS",
x     = "Total Key Events",
y     = "Average ROAS",
color = "Channel Group"
)
print(p1)
# 5) Bar: Avg CPC by Channel
p2 <- ggplot(processed, aes(reorder(channel_group, avg_cpc), avg_cpc, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
labs(
title = "Average CPC by Channel",
x     = "Channel Group",
y     = "Avg CPC"
)
print(p2)
# 6) Histogram: ROAS Distribution
p3 <- ggplot(processed, aes(avg_roas)) +
geom_histogram(binwidth = 0.1, fill = "#007bff", color = "white") +
theme_minimal() +
labs(
title = "ROAS Distribution",
x     = "Average ROAS",
y     = "Channel Count"
)
print(p3)
# 7) Top 5 Channels by Events
top_events <- processed %>% slice_max(total_events, n = 5)
p4 <- ggplot(top_events, aes(reorder(channel_group, total_events), total_events, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
theme_minimal() +
labs(
title = "Top 5 Channels by Total Events",
x     = "Channel Group",
y     = "Total Events"
)
print(p4)
# 8) Top 5 Channels by ROAS
top_roas <- processed %>% slice_max(avg_roas, n = 5)
p5 <- ggplot(top_roas, aes(reorder(channel_group, avg_roas), avg_roas, fill = channel_group)) +
geom_col(show.legend = FALSE) +
coord_flip() +
theme_minimal() +
labs(
title = "Top 5 Channels by Average ROAS",
x     = "Channel Group",
y     = "Average ROAS"
)
print(p5)
# 9) Data Preview (first 6 rows)
cat("\nðŸ“‚ Raw Data Preview (first 6 rows)\n")
knitr::kable(head(raw), format = "markdown")
# 10) Key Insights
cat("\nðŸ“Œ Key Insights:\n",
" - Organic Search & Direct lead in key events.\n",
" - Paid channels deliver higher ROAS with fewer events.\n",
" - Balance CPC and ROAS for optimal budget allocation.\n\n")
library(tidyverse)
library(readr)
library(kableExtra)
# Load data
raw <- read_csv("All_channels.csv")
# Process data
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
key_events = `Key events`,
ads_cpc = `Ads cost per click`,
roas = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(ads_cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
#| title: 123
ggplot(processed, aes(x = total_events, y = avg_roas, color = channel_group)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, color = "#333333") +
theme_minimal() +
scale_color_brewer(palette = "Dark2") +
labs(
x = "Total Key Events",
y = "Average ROAS",
color = "Channel Group"
)
library(tidyverse)
library(readr)
library(kableExtra)
# Load data
raw <- read_csv("All_channels.csv")
# Process data
processed <- raw %>%
rename(
channel_group = `Primary channel group (Default Channel Group)`,
key_events = `Key events`,
ads_cpc = `Ads cost per click`,
roas = `Return on ad spend`
) %>%
group_by(channel_group) %>%
summarise(
total_events = sum(key_events, na.rm = TRUE),
avg_cpc = mean(ads_cpc, na.rm = TRUE),
avg_roas = mean(roas, na.rm = TRUE)
) %>%
ungroup()
head(raw)
